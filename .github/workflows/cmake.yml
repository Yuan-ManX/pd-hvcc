name: CMake

on: [push, workflow_dispatch]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  macos-universal-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -G "Xcode"

  #  - name: Import Code-Signing Certificates
  #    uses: figleafteam/import-codesign-certs@v2
  #    with: 
  #      p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
  #      p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Creating Installer
      working-directory: ${{github.workspace}}
      env:
        AC_USERNAME: ${{ secrets.AC_USERNAME }}
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      run: |
        ./.github/scripts/package-macOS.sh

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pd-hvcc-MacOS
        path: pd-hvcc-MacOS


    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: pd-hvcc-MacOS

#  windows-64-build:
#    runs-on: windows-2022
#
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        submodules: recursive
#
#    - name: Create Build Environment
#      run: cmake -E make_directory ${{github.workspace}}/build 
#
#    - name: Configure CMake
#      shell: bash
#      working-directory: ${{github.workspace}}/build
#      run: cmake ${GITHUB_WORKSPACE} -G "Visual Studio 17 2022" -A x64 -DENABLE_TESTING=0
#
#    - name: Build
#      shell: bash
#      working-directory: ${{github.workspace}}/build
#      run: cmake --build . --config $BUILD_TYPE
#
#    - name: Creating Installer
#      working-directory: ${{github.workspace}}
#      shell: bash
#      run: |
#        ./.github/scripts/package-Windows.sh "x64"
#
#    - name: Archive Artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: pd-hvcc-Win64
#        path: pd-hvcc-Win64.exe
#
#    - name: Release Artifacts
#      uses: softprops/action-gh-release@v1
#      if: startsWith(github.ref, 'refs/tags/')
#      with:
#        prerelease: true
#        draft: true
#        files: pd-hvcc-Win64
#
  ubuntu-22_04-build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: sudo apt -qq update && sudo apt install  -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -G "Unix Makefiles"

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Prepare Artefacts
      working-directory: ${{github.workspace}}
      run: ./.github/scripts/package-Linux.sh

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pd-hvcc-Linux
        path: pd-hvcc-Linux

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: pd-hvcc-Linux
        
  linux-arm-build:
      runs-on: ubuntu-latest
      container: arm64v8/ubuntu:22.04
      steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
        env:
          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - name: Install Dependencies
        run: sudo apt -qq update && sudo apt install  -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev
      - name: Build
        run: mkdir build && cd build && cmake -DENABLE_TESTING=1 .. -G "Unix Makefiles" && cmake --build . --config $BUILD_TYPE
      - name: Prepare Artefacts
        working-directory: ${{github.workspace}}
        run: ./.github/scripts/package-Linux.sh
      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pd-hvcc-Linux-ARM
          path: pd-hvcc-Linux

      - name: Release Artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          draft: true
          files: pd-hvcc-Linux-ARM